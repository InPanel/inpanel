#!/bin/sh
#
# inpanel - this script starts and stops the inpanel daemon
#
# chkconfig:   - 85 15
# description: InPanel is a web-based linux VPS management tools
# processname: inpanel
# pidfile:     /usr/local/var/run/inpanel.pid


if [ $(whoami) != 'root' ]; then
    echo "Must be root to run this script."
    exit 1
fi

# Source function library.
# . /etc/rc.d/init.d/functions
# Source function library.
if [ -f /etc/init.d/functions ];then
   . /etc/init.d/functions
# else
#    echo "not found file /etc/init.d/functions"
#    exit
fi

# Source networking configuration.
# . /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

config_file="/usr/local/etc/inpanel/config.ini"
exec="/usr/local/inpanel/inpanel"
pidfile="/usr/local/var/run/inpanel.pid"

lockfile=/var/lock/subsys/inpanel

start() {
    [ -x $inpanel ] || exit 5
    echo -n $"Starting InPanel: "
    daemon --pidfile="$pidfile" "$exec &"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping InPanel: "
    killproc -p "$pidfile" $exec
    #killproc $prog -TERM
    retval=$?
    if [ $retval -eq 0 ]; then
        if [ "$CONSOLETYPE" != "serial" ]; then
           echo -en "\\033[16G"
        fi
        while rh_status_q
        do
            sleep 1
            echo -n $"."
        done
        rm -f $lockfile
    fi
    rm -f $pidfile
    echo
    return $retval
}

restart() {
    stop
    sleep 1
    start
}

uninstall() {
    echo $"Deleting InPanel... "
    stop
    rm -f /etc/init.d/inpanel
    test ! -d /root/inpanel_backup_data && mkdir /root/inpanel_backup_data
    mv /usr/local/inpanel/data /root/inpanel_backup_data
    echo $"Backup InPanel Config to /root/inpanel_backup_data"
    rm -rf /usr/local/inpanel
    echo $"InPanel Removed !"
    rm -f /usr/local/bin/inpanel
}

rh_status() {
    status -p "$pidfile" $exec
    #status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

config_help() {
    cat << EOF
InPanel Config Usage:
=======================================================================
optional arguments:
          mode : runtime mode. value: prod or demo
            ip : ip address (need restart)
          port : port number (need restart)
      username : username of admin account
      password : password of admin account
     loginlock : set the login lock. value: on or off
     accesskey : access key for remote access, must be empty
                 or a 64-bytes string with base64 encoded.
accesskeyenable: set the remote access switch. value: on or off

EXAMPLE:

inpanel config option value
inpanel config mode prod
inpanel config username admin
inpanel config username "admin"
inpanel config username 'admin'
inpanel config password $(date +%s%N | md5sum |cut -c 1-8)
inpanel config port 8888
=======================================================================
EOF
}

do_config() {
    if [ $# != 3 ]; then
        config_help
        exit
    fi
    if [ "$2" = 'password' ]; then
        key=$(date +%s%N | md5sum |cut -c 1-32)
        value=$(echo -n $3 | md5sum | cut -c 1-32)
        # format: MD5(stdin)= 76b0f7235a106c39738c626d5c23d75c
        # hmac=$(echo -n $value | openssl dgst -hmac $key -md5 | cut -c 13-44)
        hmac=$(echo -n $value | openssl dgst -hmac $key -md5 | cut -d " " -f 2)
        sed -i "s/^password =.*/password = $hmac:$key/" $config_file
    elif [ "$2" = 'port' ]; then
        if [ $3 -gt 1000 -a $3 -lt 65535 ] 2>/dev/null; then
            if [ -z "$(ss -lnp | grep :$3)" ]; then
                sed -i "s/^port =.*/port = $3/" $config_file
                echo 'Port changed: InPanel need to be restarted.'
            elif [ $(sed '/^port =/!d;s/.*=//' $config_file) = $3 ]; then
                echo "Error: InPanel is already running on port $3."
            else
                echo "Error: The port $3 is in use, please enter a new port number."
            fi
        else
            echo 'Error: The port number should between 1000 - 65535.'
        fi
    elif [ "$2" = 'mode' ]; then
        if [ $3 = 'demo' -o $3 = 'prod' ]; then
            sed -i "s/^mode =.*/mode = $3/" $config_file
        else
            echo 'Error: mode value should be either prod or demo.'
        fi
    elif [ "$2" = 'loginlock' ]; then
        if [ $3 = 'on' ]; then
            sed -i "s/^loginlock =.*/loginlock = on/" $config_file
            sed -i "s/^loginfails =.*/loginfails = 0/" $config_file
            # 253402271999 is Fri Dec 31 23:59:59 9999
            sed -i "s/^loginlockexpire =.*/loginlockexpire = 253402271999/" $config_file
        elif [ $3 = 'off' ]; then
            sed -i "s/^loginlock =.*/loginlock = off/" $config_file
            sed -i "s/^loginfails =.*/loginfails = 0/" $config_file
            sed -i "s/^loginlockexpire =.*/loginlockexpire = 0/" $config_file
        else
            echo 'Error: loginlock value should be either on or off'
        fi
    else
        sed -i "s/^$2 =.*/$2 = $3/" $config_file
    fi
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    status|status_q)
        rh_$1
        ;;
    condrestart|try-restart)
        rh_status_q || exit 7
        restart
        ;;
    uninstall)
        $1
        ;;
    config) do_config $1 $2 $3
        ;;
    *)
        echo 'Usage: inpanel {start|stop|status|restart|uninstall|config}'
        exit 2
esac
